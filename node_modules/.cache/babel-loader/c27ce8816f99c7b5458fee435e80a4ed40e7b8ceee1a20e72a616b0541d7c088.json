{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst assessmentSlice = createSlice({\n  name: 'assessment',\n  initialState: {\n    quiz: [],\n    // Stores quiz questions (MCQs)\n    flashcards: [],\n    // Stores flashcards data\n    scores: {},\n    // Stores user scores for quizzes\n    isLoading: false,\n    // Loading state for assessment data\n    error: null // Stores any errors during assessment\n  },\n  reducers: {\n    setQuiz: (state, action) => {\n      state.quiz = action.payload; // Update quiz questions\n      state.isLoading = false; // Reset loading state\n      state.error = null; // Clear any errors\n    },\n    setFlashcards: (state, action) => {\n      state.flashcards = action.payload; // Update flashcards\n      state.isLoading = false; // Reset loading state\n      state.error = null; // Clear any errors\n    },\n    setScores: (state, action) => {\n      state.scores = action.payload; // Update user scores\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload; // Set loading state\n    },\n    setError: (state, action) => {\n      state.error = action.payload; // Set error message\n      state.isLoading = false; // Reset loading state\n    },\n    clearAssessment: state => {\n      state.quiz = []; // Clear quiz questions\n      state.flashcards = []; // Clear flashcards\n      state.scores = {}; // Clear scores\n      state.error = null; // Clear errors\n    }\n  }\n});\nexport const {\n  setQuiz,\n  setFlashcards,\n  setScores,\n  setLoading,\n  setError,\n  clearAssessment\n} = assessmentSlice.actions;\nexport default assessmentSlice.reducer;","map":{"version":3,"names":["createSlice","assessmentSlice","name","initialState","quiz","flashcards","scores","isLoading","error","reducers","setQuiz","state","action","payload","setFlashcards","setScores","setLoading","setError","clearAssessment","actions","reducer"],"sources":["C:/Users/Varun G/Documents/My_Projects/HackHive/src/redux/assessmentSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst assessmentSlice = createSlice({\r\n  name: 'assessment',\r\n  initialState: {\r\n    quiz: [], // Stores quiz questions (MCQs)\r\n    flashcards: [], // Stores flashcards data\r\n    scores: {}, // Stores user scores for quizzes\r\n    isLoading: false, // Loading state for assessment data\r\n    error: null, // Stores any errors during assessment\r\n  },\r\n  reducers: {\r\n    setQuiz: (state, action) => {\r\n      state.quiz = action.payload; // Update quiz questions\r\n      state.isLoading = false; // Reset loading state\r\n      state.error = null; // Clear any errors\r\n    },\r\n    setFlashcards: (state, action) => {\r\n      state.flashcards = action.payload; // Update flashcards\r\n      state.isLoading = false; // Reset loading state\r\n      state.error = null; // Clear any errors\r\n    },\r\n    setScores: (state, action) => {\r\n      state.scores = action.payload; // Update user scores\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.isLoading = action.payload; // Set loading state\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload; // Set error message\r\n      state.isLoading = false; // Reset loading state\r\n    },\r\n    clearAssessment: (state) => {\r\n      state.quiz = []; // Clear quiz questions\r\n      state.flashcards = []; // Clear flashcards\r\n      state.scores = {}; // Clear scores\r\n      state.error = null; // Clear errors\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setQuiz, setFlashcards, setScores, setLoading, setError, clearAssessment } =\r\n  assessmentSlice.actions;\r\nexport default assessmentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,eAAe,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IAAE;IACVC,UAAU,EAAE,EAAE;IAAE;IAChBC,MAAM,EAAE,CAAC,CAAC;IAAE;IACZC,SAAS,EAAE,KAAK;IAAE;IAClBC,KAAK,EAAE,IAAI,CAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAAC,CAAC;MAC7BF,KAAK,CAACJ,SAAS,GAAG,KAAK,CAAC,CAAC;MACzBI,KAAK,CAACH,KAAK,GAAG,IAAI,CAAC,CAAC;IACtB,CAAC;IACDM,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACN,UAAU,GAAGO,MAAM,CAACC,OAAO,CAAC,CAAC;MACnCF,KAAK,CAACJ,SAAS,GAAG,KAAK,CAAC,CAAC;MACzBI,KAAK,CAACH,KAAK,GAAG,IAAI,CAAC,CAAC;IACtB,CAAC;IACDO,SAAS,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO,CAAC,CAAC;IACjC,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACJ,SAAS,GAAGK,MAAM,CAACC,OAAO,CAAC,CAAC;IACpC,CAAC;IACDI,QAAQ,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO,CAAC,CAAC;MAC9BF,KAAK,CAACJ,SAAS,GAAG,KAAK,CAAC,CAAC;IAC3B,CAAC;IACDW,eAAe,EAAGP,KAAK,IAAK;MAC1BA,KAAK,CAACP,IAAI,GAAG,EAAE,CAAC,CAAC;MACjBO,KAAK,CAACN,UAAU,GAAG,EAAE,CAAC,CAAC;MACvBM,KAAK,CAACL,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;MACnBK,KAAK,CAACH,KAAK,GAAG,IAAI,CAAC,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,OAAO;EAAEI,aAAa;EAAEC,SAAS;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,GACvFjB,eAAe,CAACkB,OAAO;AACzB,eAAelB,eAAe,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}