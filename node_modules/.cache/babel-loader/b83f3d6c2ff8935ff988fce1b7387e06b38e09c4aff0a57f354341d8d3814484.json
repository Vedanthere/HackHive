{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Varun G\\\\Documents\\\\My_Projects\\\\HackHive\\\\src\\\\components\\\\TranscriptionPanel\\\\TranscriptionPanel.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startTranscription, stopTranscription } from '../../redux/transcriptSlice';\nimport { Button, Paper, Typography } from '@mui/material';\n;\nimport { getSocket } from '../../services/socket';\nimport { initializeAudioStream, stopAudioStream } from '../../utils/audioUtils';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptContainer = styled.div`\n  height: 300px;\n  overflow-y: auto;\n  margin-top: 16px;\n  padding: 8px;\n  border: 1px solid #ddd;\n`;\n_c = TranscriptContainer;\nconst TranscriptionPanel = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isTranscribing,\n    chunks\n  } = useSelector(state => state.transcript);\n  const socket = getSocket();\n  const handleStart = async () => {\n    try {\n      const {\n        stream\n      } = await initializeAudioStream(audioChunk => {\n        socket.emit('audio-chunk', audioChunk);\n      });\n      socket.on('transcript-chunk', chunk => {\n        dispatch(addTranscriptChunk(chunk));\n      });\n      dispatch(startTranscription());\n    } catch (error) {\n      console.error('Audio capture failed:', error);\n    }\n  };\n  const handleStop = () => {\n    stopAudioStream();\n    dispatch(stopTranscription());\n    socket.off('transcript-chunk');\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Live Transcription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleStart,\n      disabled: isTranscribing,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleStop,\n      disabled: !isTranscribing,\n      variant: \"outlined\",\n      sx: {\n        ml: 2\n      },\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TranscriptContainer, {\n      children: chunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: chunk\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TranscriptionPanel, \"4uh66S/pDGZZeJjRwxed8gmnDqA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = TranscriptionPanel;\nexport default TranscriptionPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"TranscriptContainer\");\n$RefreshReg$(_c2, \"TranscriptionPanel\");","map":{"version":3,"names":["React","useDispatch","useSelector","startTranscription","stopTranscription","Button","Paper","Typography","getSocket","initializeAudioStream","stopAudioStream","styled","jsxDEV","_jsxDEV","TranscriptContainer","div","_c","TranscriptionPanel","_s","dispatch","isTranscribing","chunks","state","transcript","socket","handleStart","stream","audioChunk","emit","on","chunk","addTranscriptChunk","error","console","handleStop","off","elevation","sx","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","color","ml","map","index","_c2","$RefreshReg$"],"sources":["C:/Users/Varun G/Documents/My_Projects/HackHive/src/components/TranscriptionPanel/TranscriptionPanel.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startTranscription, stopTranscription } from '../../redux/transcriptSlice';\r\nimport { Button, Paper, Typography } from '@mui/material';;\r\nimport { getSocket } from '../../services/socket';\r\nimport { initializeAudioStream, stopAudioStream } from '../../utils/audioUtils';\r\nimport styled from 'styled-components';\r\n\r\nconst TranscriptContainer = styled.div`\r\n  height: 300px;\r\n  overflow-y: auto;\r\n  margin-top: 16px;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nconst TranscriptionPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const { isTranscribing, chunks } = useSelector((state) => state.transcript);\r\n  const socket = getSocket();\r\n\r\n  const handleStart = async () => {\r\n    try {\r\n      const { stream } = await initializeAudioStream((audioChunk) => {\r\n        socket.emit('audio-chunk', audioChunk);\r\n      });\r\n      \r\n      socket.on('transcript-chunk', (chunk) => {\r\n        dispatch(addTranscriptChunk(chunk));\r\n      });\r\n\r\n      dispatch(startTranscription());\r\n    } catch (error) {\r\n      console.error('Audio capture failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleStop = () => {\r\n    stopAudioStream();\r\n    dispatch(stopTranscription());\r\n    socket.off('transcript-chunk');\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ padding: 2 }}>\r\n      <Typography variant=\"h6\">Live Transcription</Typography>\r\n      <Button \r\n        onClick={handleStart} \r\n        disabled={isTranscribing} \r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Start\r\n      </Button>\r\n      <Button \r\n        onClick={handleStop} \r\n        disabled={!isTranscribing} \r\n        variant=\"outlined\" \r\n        sx={{ ml: 2 }}\r\n      >\r\n        Stop\r\n      </Button>\r\n      <TranscriptContainer>\r\n        {chunks.map((chunk, index) => (\r\n          <p key={index}>{chunk}</p>\r\n        ))}\r\n      </TranscriptContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TranscriptionPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}